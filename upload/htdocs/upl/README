METAMOD2 service pages for data providers
=========================================

INTRODUCTION
------------

This web application makes it possible for METAMOD2 data providers to create new datasets,
and upload data files (netCDF files) to the central data repository. In order to do so,
the data provider must be a registered user of this service.

The index.html file contains two forms, one for registered users and one for new users.
User E-mail addresses are used as basic user identification.

NEW USERS

When filling in the form for new users, the system checks if the submitted E-mail address
already belongs to any of the registered users. If so, the system assumes the user has
forgotten the password.  A new password will be created for the user, and an E-mail
containing this password will be automatically sent to the user's E-mail address.

If the submitted E-mail address is not found among the registered users's addresses, then a
manual approve action is required from the system administrator. An E-mail is sent
from the system to the system administrator containing a link, which when activated, will
create a new user account in the system. This action will also make the system send an E-mail
telling the user that the application for a new user account has been approved. The E-mail
will also provide the user with the initial password.

Users must belong to one of the institutions that are found in the INSTITUTION_LIST
value in the master_config.txt file. The new user selects which institution she/he belongs
to while filling in the form. Each institution is given an acronym. These acronyms are, among
other things, used as directory names at the topmost level for the directory hierarchy
containing the files uploaded to the system.

REGISTERED USERS

When filling in the form for registered users, the user must provide correct E-mail address
and password. The E-mail address must correspond exactly to the one submitted in the
original application form for new users. In addition, the user may change the password by
checking a check box in the form, and filling in twice the new password.

When the form for registered users is correctly submitted, the user enters a web application
for directory administration and file uploads/registrations.


WEB APPLICATION
---------------

The web application operates in two different modes (normal and external) depending on the
value of the configuration variable EXTERNAL_REPOSITORY (see the upload/README file).

Apart from the log in page, the web application has two or three main windows, available as 
menu items on the left web page column: "Administration", "Upload files" (or just "Files") and
(for normal mode) "Test a file".

The administration window allows registration of new datasets. In normal mode, a directory with
the same name as the dataset will be created in the data repository. This directory will be
created as a subdirectory of the institution directory (identified by the institution acronym).
Uploaded data files will be copied to this directory after metadata extraction. For external
repositories, the user has to enter the absolute directory path where all data files belonging
to the dataset can be found. The data files resides in this directory on any subdirectory
level.

The dataset name should be short (a configurable max length apply), and must be unique across
all datasets created for the institution.

In normal mode, a special naming scheme for data files is applied. Within each dataset directory,
file names must correspond to the following template: DATASETNAME_REST. DATASETNAME is the
name of the dataset (which may not include any underscores '_'). REST may be any string from the
alphabet [A-Za-z_.-].

The data provider who creates a dataset will be the owner of that dataset, and will have the
right to upload/register files to that dataset. Other users may also ulpoad/register files to
that dataset, but only with permission from the dataset owner. The dataset owner may set up a
dataset key (a character string) for the dataset. This key will act as a password which other
data providers must provide while uploading/registering files to the dataset. The owner may
disclose the key to any other data provider, or publish it to all providers. This disclosure of
the key must be done by E-mail or by other means; it is not a service provided by the METAMOD2
system. If the owner wants to withdraw such rights, it is allways possible to change the dataset
key. For external repositories, the dataset key is mandatory.


INTERNAL REPRESENTATION OF USER ACCOUNTS
----------------------------------------

A user account is represented by an entry in the UserTable table in the User database. 
A detailed description of the User database can be found on the web page:
https://wiki.met.no/metamod/user_database_revised.

Prior to the 2.6 release of METAMOD, user accounts were represented by files residing in
subdirectory u1 of the the METAMOD2 webrun directory (given by the value of WEBRUN_DIRECTORY
in master_config.txt). For existing METAMOD2 installations that are to be upgraded to 2.6, the
perl script load_userbase.pl can be used to convert these files to the User database.

These files have names composed as follows:

   <normalised E-mail address>.<normalised password>

The normalisation is used for getting rid of characters that may interfere with the use of
the the filenames in system commands. See the PHP function normstring() in funcs.inc on how
this is done.

The content of these files is "allmost" XML. What is missing is a start tag and corresponding
end tag. Three different tags are used:

   <heading name="" email="" institution="" telephone="" />
   <dir dirname="" key="" />
   <file name="" size="" status="" errurl="" />

The "heading" tag occure once at the beginning of a file.

Each "dir" tag contains the name of a dataset directory created by the user, together with the
dataset key (which may have empty content).

Each "file" tag contains the name, size and status of an uploaded file. In addition, an errurl
attribute may be found that points to an html file with a summary of errors found while 
"parsing" the uploaded file (see the ../../scripts/upload_monitor.pl script).

As the parsing of these files are somewhat primitive, each tag must comprise only one line.
