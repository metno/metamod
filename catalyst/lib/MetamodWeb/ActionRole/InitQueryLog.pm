package MetamodWeb::ActionRole::InitQueryLog;

=begin LICENSE

METAMOD is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

METAMOD is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with METAMOD; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

=end LICENSE

=cut

use DBIx::Class::QueryLog;
use Moose::Role;
use namespace::autoclean;

=head1 NAME

MetamodWeb::ActionRole::InitQueryLog - A Moose/Catalyst action role used to initialise a query log.

=head1 DESCRIPTION

This module implements a Moose/Catalyst action role that when applied to an
action with C<:Does('InitQueryLog')> will initialise a C<DBIx::Class> query log.

The C<DBIx::Class> query log is used to a see which SQL queries are actually
generated by C<DBIx::Class>. This is very helpful during development and
debugging since the same queries that are used by C<DBIx::Class> can also be
run in database console and you can see that your C<DBIx::Class> searches
generate the expected SQL.

Query logging will only be applied if the environment variable
C<METAMOD_DBIC_TRACE> is set to 1.

This action role should be used together with C<MetamodWeb::ActionRole::DumpQueryLog>.

=head1 METHODS

=cut

# the code to execute before the action that the role is applied to.
before 'execute' => sub {
    my ( $self, $controller, $c ) = @_;

    if( exists $ENV{METAMOD_DBIC_TRACE} && $ENV{METAMOD_DBIC_TRACE} == 1 ){
        my $mb_query_log = DBIx::Class::QueryLog->new;
        $c->model('Metabase')->schema->storage->debugobj($mb_query_log);
        $c->model('Metabase')->schema()->storage->debug(1);
        $c->stash( mb_query_log => $mb_query_log );

        my $ub_query_log = DBIx::Class::QueryLog->new;
        $c->model('Userbase')->schema->storage->debugobj($ub_query_log);
        $c->model('Userbase')->schema()->storage->debug(1);
        $c->stash( ub_query_log => $ub_query_log );

    }

};

=head1 LICENSE

GPLv2 L<http://www.gnu.org/licenses/gpl-2.0.html>

=cut

1;