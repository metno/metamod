<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

    <head>
        <title>WMS client</title>

        <link rel="stylesheet" href="[% c.uri_for('/static/css/reset.css') %]" />
        <link rel="stylesheet" href="[% c.uri_for('/static/css/base.css') %]" />
        <link rel="stylesheet" href="[% c.uri_for('/static/css/main.css') %]" />

        <link rel="stylesheet" href="[% c.uri_for('/static/css/metamod_theme/jquery-ui.css') %]" />
        <script type="text/javascript" src="[% c.uri_for('/static/js/jquery.min.js') %]"></script>
        <script type="text/javascript" src="[% c.uri_for('/static/js/jquery-ui.min.js') %]"></script>

        <script type="text/javascript" src="[% c.uri_for('/static/js/log4javascript-1.4.2/js/log4javascript.js') %]"></script>
        <script type="text/javascript" src="[% c.uri_for('/static/lib/Firebug/firebug.js') %]"></script>

        <script type="text/javascript">

            var log = log4javascript.getDefaultLogger();
            [% IF ! debug # disable logging in production %]
                log = log4javascript.getNullLogger();
            [% END %]

            var layerProjs = {};

            var projNames = {
                [%  # get list from Metamod::WMS
                    jslines = [];
                    FOR p IN projections.keys.sort;
                        # TODO check against bgmaps to see iff we have the necessary background map - FIXME
                        jslines.push("'" _ p _"': '" _ p _ ' - '_ projections.$p _ "'");
                    END;
                    jslines.join(",\n");
                %]
            };

            function buildProjList() {
                // builds projection selector from layer list
                var projCount = {};
                var allProjs = [];
                var allLayers = $("form input:checked");

                // loop through layers and count occurence of each proj
                $.each(allLayers, function() {
                    var layerName = this.id;
                    var plist = layerProjs[layerName];
                    allProjs = $.merge( allProjs, plist );
                    for (var i in plist) {
                        var p = plist[i];
                        projCount[p] = ( projCount[p] || 0 ) + 1;
                    }
                });

                // remove all existing options in selector
                $('#crs').find('option').remove();

                // add all projections common to all layers into selector
                for (pc in projCount) {
                    //log.debug('** ' + pc + ' = ' + projCount[pc] + ' of ' + allLayers.length);
                    if (pc == "CRS:84"){
                        continue;  // not a proper projection
                    }
                    // check if background map is available - FIXME
                    if ( projCount[pc] == allLayers.length ) {
                        $('<option/>').attr('value', pc).text( projNames[pc]||pc ).appendTo('#crs');
                    }
                }

            }

            $(document).ready(function() {
                $('.layer').bind('change', buildProjList); // fires whenever user (de)selects a layer
                //JQuery(buildProjList); // trying to make the menu rebuild when using history.back()...
            });

        </script>

        <style type="text/css">
            body { background-color: #fff}
            pre.rollup { display: none; font-size: small }
            p.info { font-size: smaller }
            div.list { font-size: smaller; padding-left: 20px; }
            h1 { font-size: large; }
            h3 { font-size: 14px; }
            small.info { color: #aaa };
            div.layers { }
            div.wmsthumb { float: left; width: 80px; }
            div.list { margin-left: 60px }
        </style>

    </head>
    <body>

    <h1 class="std">WMS layers</h1>

    <form action="[% c.uri_for('/search/wms') %]" method="get">
    <!--<form action="[% c.uri_for('/multiwmc') %]" method="get">-->

        [% inputs = 0; %]

        [% FOREACH ds IN datasets %]
            [% url = ds.wmsinfo.documentElement.getAttribute('url') _ '?service=WMS&version=1.3.0&request=GetCapabilities' %]

            <h3>
                [% IF 0 # debug %]
                    <a href="#" onclick="$(setup_[% ds.ds_id %]).toggle(800)">*</a>
                    <a href="[% url %]">[% ds.ds_id %]</a>:
                [% END %]
                [% ds.ds_name %]
            </h3>

            <pre id="setup_[% ds.ds_id %]" class="rollup">[% ds.wmsinfo.toString | html %]</pre>

            <div class="layers">

                [%  cap = ds.wmscap; # read in wms capabilities
                    SET thumbsize = 64;
                    SET wmsthumb = ds.wmsthumb(thumbsize);
                %]
                [% IF wmsthumb.outline # map countours as transparent overlay %]
                    <div class="wmsthumb"
                        style="position: absolute; height: [% thumbsize %]px; width: [% thumbsize %]px; z-index:12"
                        ><img src="[% wmsthumb.outline %]"/></div>
                [% END %]
                [% IF wmsthumb.datamap %]
                    <div class="wmsthumb"
                        style="height: [% thumbsize %]px; width: [% thumbsize %]px; z-index:10"
                        ><img src="[% wmsthumb.datamap %]"/></div>
                [% END %]

                <div class="list">
                    [% FOREACH layer IN cap.findnodes('//*[local-name() = "Layer"]');
                        names = layer.getChildrenByLocalName('Name');
                        NEXT UNLESS names; # skip wrapping layers w/o data (maybe better to check child layers? FIXME)
                        name = names.first.textContent;
                        title = layer.getChildrenByLocalName('Title').first.textContent;

                        projs = []; # get all projections for layer
                        FOREACH pl IN layer.findnodes('ancestor-or-self::*[local-name() = "Layer"]');
                            FOREACH crs IN pl.getChildrenByLocalName('CRS');
                                projs.push(crs.textContent); # assuming union of all sets
                            END;
                            bbox = pl.findnodes('ancestor-or-self::*[local-name() = "Layer"]/*[local-name() = "BoundingBox"][1]');
                        END;

                        projs = projs.sort.unique;
                    %]

                    [% IF ds.wmsinfo.findnodes('//*[local-name() = "baselayer" and @name="' _ name _ '"]') # listed as baselayer in wmsinfo %]
                        <input type="checkbox" class="layer" id="input[% inputs %]" name="baselayer_[% ds.ds_id %]" value="[% name %]"/><b>[% title %]</b>
                    [% ELSE %]
                        <input type="checkbox" class="layer" id="input[% inputs %]" name="layer_[% ds.ds_id %]" value="[% name %]"/>[% title %]
                    [% END %]

                    <script type="text/javascript">
                        layerProjs.input[% inputs %] = [ [% '"' _ projs.join('","') _ '"' %] ];
                    </script>

                    <br/>
                    [% inputs = inputs + 1 %]
                [% END %]
                </div>

            </div>

        [% END %]

        <div>
            <br/>
            <select id="crs" name="crs" style="width:150px">
                <!--<option disabled="disabled" selected="selected">No common projection</option>-->
            </select>
            <input type="submit" value="Visualize"/>
        </div>

    </form>

    </body>

</html>
