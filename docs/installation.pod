=head1 METAMOD software installation

Back to L<Index|index>

=head2 Introduction

This describes how to install the METAMOD software on a Linux server.
No services will be available until you configure and set up a METAMOD instance
(see L<Deploying a METAMOD application|deploying>) as well as a database instance.

METAMOD is developed, tested and used on Ubuntu LTS servers (Hardy, Lucid, Precise).
Debian packages are provided regularly for easy installation and upgrading.
Installation from source is also possible, but somewhat more time-consuming.

=head2 Required software

=over 4

=item PostgreSQL database system

The current version requires PostgreSQL 9.1 or later.
It has also been tested on version 8.3 and 8.4, but some
features may not work (in particular some PostGIS projections
required for dynamic map search may be missing).
If running a local database you need the PostgreSQL
server, otherwise only the client is required.

=item Apache 2.x web server

With mod_proxy installed (C<sudo a2enmod proxy>)

=item libxml and libxslt library

From xmlsoft.org

=item Proj4 library

L<http://proj.maptools.org>

=item NetCDF software 3.5 or later

libnetcdf, ncdump and ncgen

=back

=head2 Installation from Debian packages

This requires you have sufficient sudo privileges to install packages and
add repositories.

=head3 Adding the met.no package repository

B<Note: Currently this repo is not available outside met.no. External users must
download and install packages manually as described below.>

Add the corresponding lines to your /etc/apt/sources.list depending on your
version of Ubuntu:

  # for precise
  deb http://repo.met.no/met.no precise main contrib
  deb-src http://repo.met.no/met.no precise main contrib

  # for lucid
  deb http://repo.met.no/met.no lucid main contrib
  deb-src http://repo.met.no/met.no lucid main contrib

  # for hardy
  deb http://repo.met.no/met.no hardy main contrib
  deb-src http://repo.met.no/met.no hardy main contrib

If you want to run development versions (recommended), also add:

  # for precise
  deb http://repo.met.no/devel precise main contrib
  deb-src http://repo.met.no/devel precise main contrib

  # for lucid
  deb http://repo.met.no/devel lucid main contrib
  deb-src http://repo.met.no/devel lucid main contrib

  # for hardy
  deb http://repo.met.no/devel hardy main contrib
  deb-src http://repo.met.no/devel hardy main contrib

=head3 Installing METAMOD via apt

  $ sudo apt-get install metno-metamod-2.13

Note that the Perl dependencies package metno-perl-webdev-ver1 has been obsoleted from 2.13 onwards.
Instead all Perl dependency libraries are now included in the Metamod package.

=head3 Installing packages manually

Alternately you may download the .deb files and install manually. These may be found
on the following sites:

=over 4

=item *

L<https://wiki.met.no/metamod/download>

=item *

L<http://repo.met.no/devel/dists/precise/main/binary-amd64/web/>

=item *

L<http://repo.met.no/devel/dists/lucid/main/binary-all/web/>

=back

Installation is done using a GUI packet manager or via command line:

  $ sudo dpkg -i metno-metamod-2.13_2.13.0-1_amd64.deb

where 2.13.0-1 is the latest version in the repository.

=head2 Installation from source

=head3 Download the METAMOD source code

Check out the METAMOD source code from Subversion into a suitable directory:

  $ mkdir metamod
  $ cd metamod
  $ svn co https://svn.met.no/metamod/trunk

A tar.gz file may also be available at a later date.

=head3 Installing binary dependencies

METAMOD depends on several non-Perl compiled utilities and libraries which must be installed separately, including:

=over 4

=item *

PostgreSQL client and optionally server (preferrable 9.1 or later), as well as the DBD driver for Perl DBI

=item *

the GNOME LibXML2 and LibXSLT libraries

=item *

the Expat XML library

=item *

the PROJ.4 Cartographic Projections library from osgeo.org

=item *

the OpenSSL Library

=back

Installing these via Debial packages using C<apt-get> is recommended if possible.
A complete list of the required Debian packages can be found in F<debian/control>.

=head2 Installing Perl dependency libraries

If installing from source, you must download and build the necessary Perl modules from CPAN.
This used to be a major headache, but is now possible to do with a single command using
the new Perl module dependency manager Carton.

=head3 cpanminus

First, you need to be able to install Perl modules from CPAN.
There are several tools available for this, but we recommend using B<cpanminus>
which can be installed using either of the following commands:

  $ apt-get install cpanminus                               # for Debian systems
  $ curl -L http://cpanmin.us | sudo perl - App::cpanminus  # from source

=head3 Carton

Carton automatically downloads and builds the required METAMOD Perl dependency modules.
Unlike C<cpan> it will install the exact same module versions every time, avoiding upgrade
conflicts and making sure you have the same environment as have been tested.

Carton is currently in beta development, and a regular install from CPAN may not
give you the latest version. We recommend checking the latest version
on L<the CPAN page|http://search.cpan.org/dist/carton/> and installing it
explicitly:

  $ cpanm -S MIYAGAWA/carton-v0.9.15.tar.gz  # or whichever version is the latest

=head3 METAMOD dependencies

You are now ready to install the Perl dependencies from CPAN:

  $ cd ~/metamod/trunk
  $ carton install --deployment

Carton will then install the modules listed in F<carton.lock> into F<~/metamod/trunk/local/lib>.
This should not generate any errors as long as you have installed all the necessary binary libraries
as listed above.

=head2 Installing the PostgreSQL database

METAMOD requires two databases, one for metadata (which is just an index and can be recreated from the XML files)
and one for user credentials (which is authorative and must be backed up).

=head3 Required software

The following Debian packets must be installed on the server:

=over 4

=item * postgresql

(Defaults to the current version)

=item * postgresql-9.1-postgis

(Replace the version number with the current version)

=back

In addition, the following files must be copied to the METAMOD application server and configured in
C<PG_POSTGIS_SCRIPT> and C<PG_POSTGIS_SYSREF_SCRIPT> so that createdb.sh can read them:

  /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
  /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql

This will hopefully be resolved more elegantly in a later version.

=head3 Authentication (FIXME)

If running PostgreSQL on the same server as METAMOD, password authentication is not necessary
for local connections. Instead you can configure PostgreSQL to automatically accept connections
using sockets instead of TCP/IP by editing pg_hba.conf (replace 9.1 with correct version):

  $ sudo $EDITOR /etc/postgresql/9.1/main/pg_hba.conf

Then change C<local> from "peer" to "trust" at the end of the file:

  # DO NOT DISABLE!
  # If you change this first entry you will need to make sure that the
  # database superuser can access the database using some other method.
  # Noninteractive access to all databases is required during automatic
  # maintenance (custom daily cronjobs, replication, and similar tasks).
  #
  # Database administrative login by Unix domain socket
  #local   all             postgres                                peer
  local   all             postgres                                trust

  # TYPE  DATABASE        USER            ADDRESS                 METHOD

  # "local" is for Unix domain socket connections only
  #local   all             all                                     peer
  local   all             all                                     trust
  # IPv4 local connections:
  host    all             all             127.0.0.1/32            md5
  # IPv6 local connections:
  host    all             all             ::1/128                 md5
  # Allow replication connections from localhost, by a user with the
  # replication privilege.
  #local   replication     postgres                                peer
  #host    replication     postgres        127.0.0.1/32            md5
  #host    replication     postgres        ::1/128                 md5

Then restart PostgreSQL:

  /etc/init.d/postgresql stop
  /etc/init.d/postgresql start

Alternatively, use .pgpass (FIXME)

=head2 Conclusion

You will now have the necessary software installed, however it will not run
until you configure and set up a METAMOD application. See L<configuration> and
L<deploying> for further instructions.
