#!/usr/bin/perl -w

=begin LICENCE

----------------------------------------------------------------------------
  METAMOD - Web portal for metadata search and upload

  Copyright (C) 2008 met.no

  Contact information:
  Norwegian Meteorological Institute
  Box 43 Blindern
  0313 OSLO
  NORWAY
  email: egil.storen@met.no

  This file is part of METAMOD

  METAMOD is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  METAMOD is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with METAMOD; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
----------------------------------------------------------------------------

=end LICENCE

=cut

use strict;
use warnings;

use FindBin qw($Bin);
use lib "$Bin/../../common/lib", , "$Bin/../lib";
use Metamod::Config;
use Getopt::Long;

my ($opt_p, $config_file_or_dir, $opt_nginx);
GetOptions('p' => \$opt_p, # print to stdout
           'nginx' => \$opt_nginx, # generate nginx output instead of apache
           'config=s' => \$config_file_or_dir,
) or usage();

if(!Metamod::Config->config_found($config_file_or_dir)){
    usage();
}

my $mm_config = Metamod::Config->new($config_file_or_dir, { nolog => 1 } );
my $webrun = $mm_config->get('WEBRUN_DIRECTORY');
my $config_dir = $mm_config->get('CONFIG_DIR');
my $etc_dir = "$config_dir/etc";
my $conf_file = $opt_nginx ? "$etc_dir/nginx.conf" : "$etc_dir/httpd.conf";
my $virtualhost = $mm_config->get('VIRTUAL_HOST');
my $server = $mm_config->get('SERVER');
my $local = $mm_config->get('LOCAL_URL');
my $base = $mm_config->get('BASE_PART_OF_EXTERNAL_URL');
my $port = $mm_config->get('CATALYST_PORT');
my $operator_email = $mm_config->get('OPERATOR_EMAIL');
my $extra_apache_conf = $mm_config->has('EXTRA_APACHE_CONF') ? 'Include ' . $mm_config->get('EXTRA_APACHE_CONF') : '';

my %obsolete = (
    sch => '/search',
    upl => '/upload',
    qst => '/editor',
);

my $old_redirect = "";

if ( $mm_config->has('OLD_REDIRECT') ) {
    my $prefix =  $mm_config->get('OLD_REDIRECT');

    foreach ( keys %obsolete ) {
        $old_redirect .= "\nRedirectMatch   301     /$prefix/$_     $base$local$obsolete{$_}\n\n";
    }
}


my $site = $local;
$site .= " on $virtualhost" if $virtualhost;
my $apache_config_dir = $virtualhost ? "/etc/apache/sites-available" : "/etc/apache2/conf.d";

my $installation_dir = $mm_config->get('INSTALLATION_DIR') or die "Missing INSTALLATION_DIR in config";
my %paths = (
    root    => "$installation_dir/catalyst/root",
    custom  => "$config_dir/custom",
);

my $config_apache = <<EOT;
#
# Autogenerated httpd config stub for Metamod application $site
# Copy/link this file to $apache_config_dir

# NOTE: use EITHER sites-available (if using virtual hostnames in DNS) OR conf.d (with path prefix).
# DO NOT PUT PARTIAL METAMOD CONFIGURATION IN BOTH!!!!!
# Note ESPECIALLY that mod_rewrite will NOT work in ANY virtualhost if defined in conf.d
# That means you must disable ALL files in sites-enabled (including 000-default) for custom files to work!!!

# --------------
# Catalyst proxy settings

<Proxy *>
    Order deny,allow
    Allow from all
</Proxy>

ProxyPass           $local/static   !
ProxyPass           $local/upl      !
ProxyPass           $local/docs     !

ProxyPass           $local/         http://127.0.0.1:$port/     retry=5
ProxyPassReverse    $local/         http://127.0.0.1:$port/

# broken - generates infinite redirect loop
#Redirect seeother   $local          $base$local/

# -----------
# Plain Apache settings
$old_redirect
# static files should be served directly from Apache
<IfModule mod_rewrite.c>
    # using mod_rewrite to enable custom static files
    RewriteEngine  on
    #RewriteOptions Inherit
    RewriteLog "/var/log/apache2/error.log"
    RewriteLogLevel 6
    #LogLevel debug

    # redefine to first look for static files in application directory
    Alias               $local/static      $paths{custom}/static

    # internal redirect to installation dir if not exists in custom dir
    RewriteCond         $paths{custom}/static/\$1   !-s
    RewriteRule         ^$local/static(.*)          $paths{root}/static\$1
</IfModule>
<IfModule !mod_rewrite.c>
    # fallback to default settings if mod_rewrite not installed (i.e. no custom files)
    Alias               $local/static      $paths{root}/static
</IfModule>

# also serving error reports (which has a hardcoded url)
Alias               $local/upl/uerr     $webrun/upl/uerr

# as well as system documentation
Alias               $local/docs         $installation_dir/docs/html

# generated arachnid control
Alias               /robots.txt         $local/robots.txt

<Directory $installation_dir/docs/html>
    Options Indexes FollowSymLinks MultiViews
    AddDefaultCharset UTF-8
    #AllowOverride None
    Order allow,deny
    allow from all
</Directory>

EOT

my $config_nginx = <<EOT;

server {
    listen 80;

    #error_log /var/log/nginx/error.log warn;

    # Make site accessible from http://localhost/
    server_name $server;

    location ^~ $local/static/(.*) {
        alias $paths{custom}/static/;
        try_files \$1 $local/default/\$1 =404;
        #expires 7d;
    }

    location ~ $local/default/(.*) {
        alias $paths{root}/static/;
        try_files \$1 =404;
    }

    location ^~ $local/upl/err/ {
        alias $webrun/upl/err/;
    }

    location ^~ $local/docs/ {
        alias $installation_dir/docs/html/;
        index index.html;
    }

    location ~ $local/(.+) {
        include /etc/nginx/proxy_params;
        #proxy_set_header X-Forwarded-For \$remote_addr;
        proxy_pass http://127.0.0.1:$port/\$1?\$query_string;
    }

    location /robots.txt {
        alias $local/robots.txt;
    }

}

EOT


my $conf_text = $opt_nginx? $config_nginx : $config_apache;

if ($virtualhost) {
    my $serveralias = ( $virtualhost =~ /^([^.]+)/ ) ? "ServerAlias $1" : '';
    $conf_text = <<EOT2;
<VirtualHost *>

ServerName $virtualhost
$serveralias
ServerAdmin $operator_email
$conf_text
$extra_apache_conf

</VirtualHost>
EOT2

}

if ($conf_file && !$opt_p) {
    mkdir $etc_dir unless -e $etc_dir;
    open FH, ">$conf_file" or die "Cannot open $conf_file for writing";
    print STDERR "Writing proxy config to $conf_file\n";
    print FH $conf_text;
} else {
    print $conf_text;
}

sub usage {
    print STDERR "Usage: $0 [-p] [--config <config file or dir>]\n";
    exit (1);
}

=head1 NAME

B<gen_httpd_conf.pl> - Proxy config generator for Metamod

=head1 DESCRIPTION

This utility generates a stub Apache or nginx config to be placed somewhere in sites-available
(if using VirtualHosts) or conf.d (if using path to specify different sites).

The generated file is written to $target/etc/httpd.conf (for Apache),
$target/etc/nginx.conf for nginx, or stdout if using -p.

=head1 USAGE

=head2 Running script

 ./common/scripts/gen_httpd_conf.pl [-p] [--nginx] <application_directory>

=head1 OPTIONS

=head2 Parameters

=over 4

=item -p

Prints output to stdout regardless of setting in master_config.

=item application_directory

'application_directory' is the name of a directory containing the application
specific files. Inside this directory, there must be a master_config.txt file.

=back

=head1 LICENSE

Copyright (C) 2010 The Norwegian Meteorological Institute.

METAMOD is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

=cut
