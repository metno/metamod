# Create an environment for running METAMOD from the commandline.
# This is just a convenience for setting the correct lib paths and
# master config environment
#
# This file must be used with "source activate" *from bash*
# you cannot run it directly
#
# This file has been more or less copied from what virtualenv creates.

deactivate_mm () {

    if [ -n "$_OLD_VIRTUAL_PERL5LIB" ] ; then
    	PERL5LIB="$_OLD_VIRTUAL_PERL5LIB"
    	export PERL5LIB
    	unset _OLD_VIRTUAL_PERL5LIB
    fi


    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi

    unset VIRTUAL_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

activate_mm() {

    # unset irrelavent variables
    deactivate_mm nondestructive

    METAMOD_MASTER_CONFIG=`readlink -f $1`
    export METAMOD_MASTER_CONFIG

    _OLD_VIRTUAL_PERL5LIB="$PERL5LIB"
    PERL5LIB=$PERL5LIB:"/opt/metno-perl-webdev-ver1/lib/perl5"
    export PERL5LIB

    _OLD_VIRTUAL_PATH="$PATH"

    # we are sourcing the file so we cannot use dirname $0 to find the location of the script
    SCRIPT_PATH=`readlink -f ${BASH_SOURCE[0]}`
    SCRIPT_PATH=`dirname $SCRIPT_PATH`
    PATH=$PATH:"$SCRIPT_PATH/base/init":"$SCRIPT_PATH/base/userinit":"$SCRIPT_PATH/common":"$SCRIPT_PATH/common/scripts":"$SCRIPT_PATH/catalyst/script"
    export PATH

    _OLD_VIRTUAL_PS1="$PS1"
    if [ -f $1 ] ; then
        PS1="(`dirname \"$METAMOD_MASTER_CONFIG\"`)$PS1"
    else
        PS1="(`dirname \"$METAMOD_MASTER_CONFIG\"`/`basename \"$METAMOD_MASTER_CONFIG\"`)$PS1"
    fi
    export PS1

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi
}

if [ $# != 1 ]
then
    echo "You must supply the config dir as a parameter"
else
    if [ $1 == 'deactivate' ] ; then
    	deactivate_mm
    else
        activate_mm $1
    fi
fi


