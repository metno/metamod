<?xml version="1.0" encoding="UTF-8" ?>
<!--
    An example how to use this DTD from your XML document:

    <?xml version="1.0"?>

    <digest_nc
       xmlns="http://www.met.no/metamod2/conf_digest_nc/"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.met.no/metamod2/conf_digest_nc/ conf_digest_nc.xsd">
    ...
    </digest_nc>

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace='http://www.met.no/metamod2/conf_digest_nc/'
  xmlns='http://www.met.no/metamod2/conf_digest_nc/'
>
  <xs:element name="digest_nc">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="file_structures" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

<xs:element name="file_structures" type='FileStructures' />
<xs:element name="structure"  type='Structure'/>
<xs:element name="variable" type='Variable'/>
<xs:element name="global_attributes" type='GlobalAttributes' />
<xs:element name="attribute_aliases" type='AttributeAliases' />
<xs:element name="investigate_data_dimensions" type='InvestigateDataDimensions'/>
<xs:element name="global" type='Global'/>
<xs:element name="set_global_attribute_value" type='SetGlobalAttributeValue'/>
<xs:element name="variables_of_type" type='VariablesOfType'/>
<xs:element name="set" type='Set'/>
<xs:element name="dim" type='Dim'/>
<xs:element name="att" type='Att' />
<xs:element name="dimensions" type='Dimensions' />
<xs:element name="mandatory" type='Mandatory' />
<xs:element name="vocabulary" type='Vocabulary'/>
<xs:element name="convert" type='Convert'/>
<xs:element name="multivalue" type='MultiValue'/>
<xs:element name="breaklines" type='BreakLines'/>
<xs:element name="aggregate" type='Aggregate'/>

    <xs:complexType name='FileStructures'>
      <xs:sequence>
        <xs:element ref="structure" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name='Structure'>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="variable"/>
        <xs:element ref="global_attributes" />
        <xs:element ref="attribute_aliases" />
        <xs:element ref="investigate_data_dimensions" />
        <xs:element ref="global"/>
        <xs:element ref="set_global_attribute_value"/>
        <xs:element ref="variables_of_type"/>
        <xs:element ref="set"/>
      </xs:choice>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="regex" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name='Aggregate'>
      <xs:attribute name="rule" type="xs:string" use="required" />
      <xs:attribute name="errmsg" type="xs:string" use="optional" />
    </xs:complexType>


    <xs:complexType name='BreakLines'>
      <xs:attribute name="value" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='MultiValue'>
      <xs:attribute name="separator" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType mixed="true" name='Convert'>
      <xs:attribute name="dummy" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType mixed="true" name='Vocabulary'>
      <xs:attribute name="on_error" type="xs:string" use="required" />
      <xs:attribute name="escapes" type="xs:string" use="optional" />
      <xs:attribute name="errmsg" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='Att'>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="vocabulary"/>
        <xs:element ref="convert"/>
        <xs:element ref="multivalue"/>
        <xs:element ref="breaklines"/>
        <xs:element ref="aggregate"/>
        <xs:element ref="mandatory"/>
      </xs:choice>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType mixed="true" name='Dimensions'>
      <xs:attribute name="on_error" type="xs:string" use="optional" />
      <xs:attribute name="escapes" type="xs:string" use="optional" />
      <xs:attribute name="errmsg" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name='Mandatory'>
      <xs:attribute name="on_error" type="xs:string" use="required" />
      <xs:attribute name="only_if" type="xs:string" use="optional" />
      <xs:attribute name="errmsg" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='Variable'>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="att"/>
        <xs:element ref="dimensions"/>
        <xs:element ref="mandatory"/>
      </xs:choice>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="if_in_list" type="xs:string" use="optional" />
      <xs:attribute name="comment" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name='GlobalAttributes'>
      <xs:sequence>
        <xs:element ref="att" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType mixed="true" name='AttributeAliases'>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="errmsg" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='Dim'>
      <xs:attribute name="addmatches" type="xs:string" use="optional" />
      <xs:attribute name="extendtype" type="xs:string" use="required" />
      <xs:attribute name="rex" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='InvestigateDataDimensions'>
      <xs:sequence>
        <xs:element ref="dim" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>

    <xs:complexType name='Global'>
      <xs:attribute name="lists" type="xs:string" use="optional" />
      <xs:attribute name="switches" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType mixed="true" name='SetGlobalAttributeValue'>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType mixed="true" name='VariablesOfType'>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>

    <xs:complexType name='Set'>
      <xs:attribute name="switch" type="xs:string" use="required" />
    </xs:complexType>

</xs:schema>
